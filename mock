#!/usr/bin/env python3
import random
import subprocess
import sys


def random_case(x: str, p: float):
    return x.upper() if random.uniform(0, 1) <= p else x.lower()


def mockify(s: str, p: float):
    return ''.join(map(lambda x: random_case(x, p), s))


def to_clipboard(x):
    os = sys.platform
    if os == 'linux':
        subprocess.run(f'echo -n "{x}" | xclip -sel clip', shell=True)
    elif os == 'darwin':
        subprocess.run(f'echo -n "{x}" | pbcopy', shell=True)
    elif os == 'win32':
        subprocess.run(f'echo -n "{x}" | clip', shell=True)


def run_mock(message, probability, copy, quiet):
    output = mockify(message, probability)
    if copy:
        to_clipboard(output)
    if not quiet:
        print(output)


if __name__ == '__main__':
    import argparse

    parser = argparse.ArgumentParser(description='The best tool to convey sarcasm')
    parser.add_argument('message', help='message to ironify, alternatively you can pipe text into mock', nargs='?')
    parser.add_argument('-x', '--copy',
                        help='copy ironyc message to clipboard, only works with last piped line',
                        action='store_true')
    parser.add_argument('-p', '--probability', help='probability [0, 1] of upper case letters', type=float, default=0.5)
    parser.add_argument('-q', '--quiet', help='does not print to terminal',
                        action='store_true')
    args = parser.parse_args()

    probability = args.probability
    copy = args.copy
    quiet = args.quiet

    if args.message is not None:
        run_mock(args.message, probability, copy, quiet)
    else:
        args.copy = False
        for line in sys.stdin:
            run_mock(line.replace('\n', ''), probability, copy, quiet)
